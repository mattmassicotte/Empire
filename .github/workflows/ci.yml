name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'CODE_OF_CONDUCT.md'
      - '.editorconfig'
      - '.spi.yml'
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: macOS-15
    env:
      DEVELOPER_DIR: /Applications/Xcode_${{ matrix.xcode-version }}.app
    strategy:
      matrix:
        destination:
          - "platform=macOS"
          - "platform=macOS,variant=Mac Catalyst"
          - "platform=iOS Simulator,name=iPhone 16"
          - "platform=tvOS Simulator,name=Apple TV"
          - "platform=watchOS Simulator,name=Apple Watch Series 10 (42mm)"
          - "platform=visionOS Simulator,name=Apple Vision Pro"
        xcode-version:
          - '16.0'
          - '16.1'
          - '16.2'
          - '16.3'
        swift-syntax-version:
          - '600.0.0'
          - '600.0.1'
          - '601.0.0'
          - '601.0.1'
        configuration:
          - 'debug'
          - 'release'
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Test platform ${{ matrix.destination }} / Xcode ${{ matrix.xcode-version }} / swift-syntax ${{ matrix.swift-syntax-version }} / ${{ matrix.configuration }}
        run: |
          swift --version
          swift package reset
          swift package resolve
          swift package resolve --version ${{ matrix.swift-syntax-version }} swift-syntax
          set -o pipefail && xcodebuild -scheme Empire-Package -destination "${{ matrix.destination }}" test | xcbeautify

  linux_test:
    name: Test Linux
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        swift-version:
          - '6.0.0'
          - '6.0.1'
          - '6.0.2'
          - '6.0.3'
          - '6.1.0'
        swift-syntax-version:
          - '600.0.0'
          - '600.0.1'
          - '601.0.0'
          - '601.0.1'
        configuration:
          - 'debug'
          - 'release'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install swiftly
        run: |
          curl -O https://download.swift.org/swiftly/linux/swiftly-$(uname -m).tar.gz
          tar zxf swiftly-$(uname -m).tar.gz
          ./swiftly init --quiet-shell-followup
          . ~/.local/share/swiftly/env.sh
          hash -r
          sudo apt-get -y install libcurl4-openssl-dev pkg-config python3-lldb-13
      - name: Install the ${{ matrix.swift-version }} Swift toolchain
        run: |
          . ~/.local/share/swiftly/env.sh
          hash -r
          swiftly install --use ${{ matrix.swift-version }}
      - name: Test
        run: |
          . ~/.local/share/swiftly/env.sh
          hash -r
          swift --version
          swift package reset
          swift package resolve
          swift package resolve --version ${{ matrix.swift-syntax-version }} swift-syntax
          swift test --configuration ${{ matrix.configuration }}
